import hudson.model.*
import hudson.EnvVars
import groovy.json.JsonSlurperClassic
import groovy.json.JsonBuilder
import groovy.json.JsonOutput
import java.net.URL


node{
 stage('Checkout') {
 // git branch: 'main', url: 'https://github.com/AnjuMeleth/SpringPetClinic.git'
 git 'https://github.com/AnjuMeleth/spring-petclinic.git'

    }
 stage('Build') {
 dir('') {
     withMaven(
        // Maven installation declared in the Jenkins "Global Tool Configuration"
        maven: 'M3') {
            bat 'mvn compile'
            }
        }
    }
 stage('Test') {
 dir('') {
     withMaven(
        // Maven installation declared in the Jenkins "Global Tool Configuration"
        maven: 'M3') {
            bat 'mvn test'
            }
        }
    } 
stage('Package') {
 dir('') {
     withMaven(
        // Maven installation declared in the Jenkins "Global Tool Configuration"
        maven: 'M3') {
            bat 'mvn package'
            }
        }
    } 
     
stage('Report') {
 dir('') {
     withMaven(
        // Maven installation declared in the Jenkins "Global Tool Configuration"
        maven: 'M3') {
            bat 'mvn verify'
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site/jacoco', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])
            }
        }
    }
stage('Deploy'){
           
                input 'Do you approve the deployment?'
                bat "java -jar -Dserver.port=9000 ./target/spring-petclinic-2.1.0.BUILD-SNAPSHOT.jar "
		    
    }    
stage('clean up') {
    echo "cleaning up the workspace"
    cleanWs()
    }
}// node
